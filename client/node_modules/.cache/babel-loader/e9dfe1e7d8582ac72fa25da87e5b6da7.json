{"ast":null,"code":"import { USER_LOGIN, USER_LOGIN_FAIL, USER_LOGIN_SUCCESS, USER_REGISTER, USER_REGISTER_FAIL, USER_REGISTER_SUCCESS } from \"../constants/actionType\";\nimport axios from 'axios'; //high order function ,dispatch: to dispatch action of the back end success/fail/register \n\nexport const signUp = newUser => async dispatch => {\n  dispatch({\n    type: USER_REGISTER\n  });\n\n  try {\n    const addUser = await axios.post('/user/register', newUser);\n    console.log(addUser);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: addUser.data\n    });\n  } catch (error) {\n    console.log(error.response.data);\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response.data\n    });\n  }\n};\nexport const login = newUser => async dispatch => {\n  dispatch({\n    type: USER_LOGIN\n  });\n\n  try {\n    const addUser = await axios.post('/user/register', newUser);\n    console.log(addUser);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: addUser.data\n    });\n  } catch (error) {\n    console.log(error.response.data);\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response.data\n    });\n  }\n};","map":{"version":3,"sources":["D:/GoMyCode/eventProject/client/src/JS/action/index.js"],"names":["USER_LOGIN","USER_LOGIN_FAIL","USER_LOGIN_SUCCESS","USER_REGISTER","USER_REGISTER_FAIL","USER_REGISTER_SUCCESS","axios","signUp","newUser","dispatch","type","addUser","post","console","log","payload","data","error","response","login"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,eAArB,EAAsCC,kBAAtC,EAA0DC,aAA1D,EAAyEC,kBAAzE,EAA6FC,qBAA7F,QAA0H,yBAA1H;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,MAAM,GAAIC,OAAD,IAAa,MAAOC,QAAP,IAAoB;AAEjDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP;AAAR,GAAD,CAAR;;AAEA,MAAI;AACE,UAAMQ,OAAO,GAAI,MAAML,KAAK,CAACM,IAAN,CAAW,gBAAX,EAA6BJ,OAA7B,CAAvB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAF,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,qBAAR;AAA+BU,MAAAA,OAAO,EAAEJ,OAAO,CAACK;AAAhD,KAAD,CAAR;AAIL,GAPD,CAOE,OAAOC,KAAP,EAAc;AACVJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACC,QAAN,CAAeF,IAA3B;AACAP,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACN,kBAAN;AAA2BW,MAAAA,OAAO,EAACE,KAAK,CAACC,QAAN,CAAeF;AAAlD,KAAD,CAAR;AAEL;AAIN,CAnBM;AAuBP,OAAO,MAAMG,KAAK,GAAIX,OAAD,IAAa,MAAOC,QAAP,IAAoB;AAEhDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEV;AAAR,GAAD,CAAR;;AAEA,MAAI;AACE,UAAMW,OAAO,GAAI,MAAML,KAAK,CAACM,IAAN,CAAW,gBAAX,EAA6BJ,OAA7B,CAAvB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAF,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,kBAAR;AAA4Ba,MAAAA,OAAO,EAAEJ,OAAO,CAACK;AAA7C,KAAD,CAAR;AAIL,GAPD,CAOE,OAAOC,KAAP,EAAc;AACVJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACC,QAAN,CAAeF,IAA3B;AACAP,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACT,eAAN;AAAwBc,MAAAA,OAAO,EAACE,KAAK,CAACC,QAAN,CAAeF;AAA/C,KAAD,CAAR;AAEL;AAIN,CAnBM","sourcesContent":["import { USER_LOGIN, USER_LOGIN_FAIL, USER_LOGIN_SUCCESS, USER_REGISTER, USER_REGISTER_FAIL, USER_REGISTER_SUCCESS } from \"../constants/actionType\"\r\nimport axios from 'axios';\r\n\r\n//high order function ,dispatch: to dispatch action of the back end success/fail/register \r\nexport const signUp = (newUser) => async (dispatch) => {\r\n\r\n      dispatch({ type: USER_REGISTER })\r\n      \r\n      try {\r\n            const addUser =  await axios.post('/user/register', newUser)\r\n            console.log(addUser);\r\n            dispatch({ type: USER_REGISTER_SUCCESS, payload: addUser.data });\r\n            \r\n\r\n\r\n      } catch (error) {\r\n            console.log(error.response.data);\r\n            dispatch({type:USER_REGISTER_FAIL , payload:error.response.data})\r\n            \r\n      }\r\n      \r\n\r\n      \r\n}\r\n\r\n\r\n\r\nexport const login = (newUser) => async (dispatch) => {\r\n\r\n      dispatch({ type: USER_LOGIN })\r\n      \r\n      try {\r\n            const addUser =  await axios.post('/user/register', newUser)\r\n            console.log(addUser);\r\n            dispatch({ type: USER_LOGIN_SUCCESS, payload: addUser.data });\r\n            \r\n\r\n\r\n      } catch (error) {\r\n            console.log(error.response.data);\r\n            dispatch({type:USER_LOGIN_FAIL , payload:error.response.data})\r\n            \r\n      }\r\n      \r\n\r\n      \r\n}"]},"metadata":{},"sourceType":"module"}